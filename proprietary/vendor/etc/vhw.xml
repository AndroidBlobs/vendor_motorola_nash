<?xml version="1.0" encoding="utf-8"?>
<!--  Copyright (C) 2015/2016 Motorola Mobility, Lenovo Company -->
<validation match="ro.boot.device">
	<!-- device describes a version of mapping logic applicable to a matching device -->
	<!-- the device string to do case-insensitive substring match against "name" is
		to be queried from property indicated by "match", or its BL equivalent -->
	<!-- incremented version tells boot script to update the validation tags from this file -->
	<device name="saratoga" version="2.2">

		<!-- Features list variable hardware components for this device -->
		<features>
			<string-array name=".features">
				<!-- RF banding -->
				<item>radio</item>
				<!-- RAM size -->
				<item>ram</item>
				<!-- Storage size -->
				<item>storage</item>
				<!-- Dual SIM function -->
				<item>dualsim</item>
				<!-- Camera imager resolution -->
				<item>imager</item>
				<!-- Front color -->
				<item>frontcolor</item>
			</string-array>
		</features>

		<!-- Attributes list allowed values for features -->
		<attributes>
			<string-array name=".attributes">
				<!-- range is a comma-separated list of allowed string values -->
				<item>.range</item>
				<!-- cmdline items must be exported to kernel cmdline, with prefix given in the value -->
				<item>.cmdline</item>
				<!-- chosen items must be exported to kernel devtree, with prefix given in the value -->
				<item>.chosen</item>
				<!-- system items must be exported as system property, with prefix given in the value -->
				<item>.system</item>
				<!-- same format as before, plus new attribute ".auto" -->
				<!-- auto indicates BL should auto-fill respective tag if it is empty -->
				<!-- this can work either using "hwid", "hwprobe" or "uspace" method -->
				<item>.auto</item>
			</string-array>
		</attributes>

		<!-- Constraints describe interpretation of attributes, and may contain data to feed to BL -->
		<constraints>
			<!-- look up value by matching "hwid" table, combination with current device,
				then parsing out field indicated by "index",
				and then translating the field as prescribed by "map" -->
			<string name="radio/.auto">key=hwid;index=2;map=1:NA,2:ROW,3:NA_UMTS,4:SPRINT</string>
			<string name="radio/.cmdline">androidboot.</string>
			<string name="radio/.system">ro.vendor.hw.</string>
			<string-array name="radio/.range">
				<item>NA</item>
				<item>ROW</item>
				<item>NA_UMTS</item>
				<item>SPRINT</item>
			</string-array>

			<!-- use result of ram HW detection to fill the field -->
			<string name="ram/.auto">key=hwprobe;index=__ram</string>
			<string name="ram/.system">ro.vendor.hw.</string>
			<string-array name="ram/.range">
				<item>4GB</item>
				<item>6GB</item>
			</string-array>

			<!-- use result of storage HW detection to fill the field -->
			<string name="storage/.auto">key=hwprobe;index=__storage</string>
			<string name="storage/.system">ro.vendor.hw.</string>
			<string-array name="storage/.range">
				<item>64GB</item>
				<item>128GB</item>
			</string-array>

			<string name="dualsim/.auto">default=false</string>
			<string name="dualsim/.cmdline">androidboot.</string>
			<string name="dualsim/.system">ro.vendor.hw.</string>
			<string-array name="dualsim/.range">
				<item>true</item>
				<item>false</item>
			</string-array>

			<string name="imager/.auto">default=12MP</string>
			<string name="imager/.chosen">mmi,</string>
			<string name="imager/.system">ro.vendor.hw.</string>
			<string-array name="imager/.range">
				<item>12MP</item>
			</string-array>

			<!-- frontcolor has to be programmed explicitly -->
			<string name="frontcolor/.system">ro.vendor.hw.</string>
			<string-array name="frontcolor/.range">
				<item>white</item>
				<item>gold</item>
				<item>other</item>
			</string-array>
		</constraints>

		<mappings>
			<!-- Variants describe mapping of feature combinations to device fingerprints,
				to be set in property indicated by "export" -->
			<variants export="ro.vendor.hw.variant" append="ro.vendor.product.device,ro.vendor.product.name,ro.product.device,ro.product.name">
				<!-- ... same format as before ... -->
			</variants>

			<!-- Products describe mapping of feature combinations to marketing names,
				to be set in property indicated by "export" -->
			<products export="ro.vendor.product.display" default="Moto Z&#x00B2; Saratoga">
			</products>

			<!-- SKUs describe mapping of feature combinations to factory SKUs,
				disregard this section for now, its implementation is not urgent -->
			<skus export="ro.vendor.product.sku">
				<!-- ... same format as variants/products ... -->
			</skus>
		</mappings>
	</device>

	<!-- device describes a version of mapping logic applicable to a matching device -->
	<!-- the device string to do case-insensitive substring match against "name" is
		to be queried from property indicated by "match", or its BL equivalent -->
	<!-- incremented version tells boot script to update the validation tags from this file -->
	<device name="nash" version="2.2">

		<!-- Features list variable hardware components for this device -->
		<features>
			<string-array name=".features">
				<!-- RF banding -->
				<item>radio</item>
				<!-- RAM size -->
				<item>ram</item>
				<!-- Storage size -->
				<item>storage</item>
				<!-- Dual SIM function -->
				<item>dualsim</item>
				<!-- Camera imager resolution -->
				<item>imager</item>
				<!-- Front color -->
				<item>frontcolor</item>
				<!-- Fingerprint sensor -->
				<item>fps</item>
			</string-array>
		</features>

		<!-- Attributes list allowed values for features -->
		<attributes>
			<string-array name=".attributes">
				<!-- range is a comma-separated list of allowed string values -->
				<item>.range</item>
				<!-- cmdline items must be exported to kernel cmdline, with prefix given in the value -->
				<item>.cmdline</item>
				<!-- chosen items must be exported to kernel devtree, with prefix given in the value -->
				<item>.chosen</item>
				<!-- system items must be exported as system property, with prefix given in the value -->
				<item>.system</item>
				<!-- same format as before, plus new attribute ".auto" -->
				<!-- auto indicates BL should auto-fill respective tag if it is empty -->
				<!-- this can work either using "hwid", "hwprobe" or "uspace" method -->
				<item>.auto</item>
			</string-array>
		</attributes>

		<!-- Constraints describe interpretation of attributes, and may contain data to feed to BL -->
		<constraints>
			<!-- look up value by matching "hwid" table, combination with current device,
				then parsing out field indicated by "index",
				and then translating the field as prescribed by "map" -->
			<string name="radio/.auto">key=hwid;index=2;map=1:NA,2:ROW,3:NA_UMTS,4:SPRINT,5:EMEA,6:CHINA</string>
			<string name="radio/.cmdline">androidboot.</string>
			<string name="radio/.system">ro.vendor.hw.</string>
			<string-array name="radio/.range">
				<item>NA</item>
				<item>ROW</item>
				<item>NA_UMTS</item>
				<item>SPRINT</item>
				<item>EMEA</item>
				<item>CHINA</item>
			</string-array>

			<!-- use result of ram HW detection to fill the field -->
			<string name="ram/.auto">key=hwprobe;index=__ram</string>
			<string name="ram/.system">ro.vendor.hw.</string>
			<string-array name="ram/.range">
				<item>4GB</item>
				<item>6GB</item>
			</string-array>

			<!-- use result of storage HW detection to fill the field -->
			<string name="storage/.auto">key=hwprobe;index=__storage</string>
			<string name="storage/.system">ro.vendor.hw.</string>
			<string-array name="storage/.range">
				<item>64GB</item>
				<item>128GB</item>
			</string-array>

			<string name="dualsim/.auto">default=true</string>
			<string name="dualsim/.cmdline">androidboot.</string>
			<string name="dualsim/.system">ro.vendor.hw.</string>
			<string-array name="dualsim/.range">
				<item>true</item>
				<item>false</item>
			</string-array>

			<string name="imager/.auto">default=12MP</string>
			<string name="imager/.chosen">mmi,</string>
			<string name="imager/.system">ro.vendor.hw.</string>
			<string-array name="imager/.range">
				<item>12MP</item>
			</string-array>

			<!-- frontcolor has to be programmed explicitly -->
			<string name="frontcolor/.system">ro.vendor.hw.</string>
			<string-array name="frontcolor/.range">
				<item>white</item>
				<item>black</item>
				<item>gold</item>
				<item>other</item>
			</string-array>

			<string name="fps/.auto">default=true</string>
			<string name="fps/.chosen">mmi,</string>
			<string name="fps/.system">ro.vendor.hw.</string>
			<string-array name="fps/.range">
				<item>true</item>
			</string-array>
		</constraints>

		<mappings>
			<!-- Variants describe mapping of feature combinations to device fingerprints,
				to be set in property indicated by "export" -->
			<variants export="ro.vendor.hw.variant" append="ro.vendor.product.device,ro.vendor.product.name,ro.product.device,ro.product.name">
				<!-- ... same format as before ... -->
			</variants>

			<!-- Products describe mapping of feature combinations to marketing names,
				to be set in property indicated by "export" -->
			<products export="ro.vendor.product.display" default="Moto Z&#x00B2;">
				<product name="moto z 2018">
					<string name="radio">CHINA</string>
				</product>
			</products>

			<!-- SKUs describe mapping of feature combinations to factory SKUs,
				disregard this section for now, its implementation is not urgent -->
			<skus export="ro.vendor.product.sku">
				<!-- ... same format as variants/products ... -->
			</skus>
			<quirks>
				<quirk name="0" export="vendor.display.panel_mountflip" default="3">
					<string name="/proc/device-tree/chosen/mmi,panel_name">mipi_mot_cmd_smd_QHD_546_g</string>
				</quirk>
			</quirks>
		</mappings>
	</device>

	<!-- device describes a version of mapping logic applicable to a matching device -->
	<!-- the device string to do case-insensitive substring match against "name" is
		to be queried from property indicated by "match", or its BL equivalent -->
	<!-- incremented version tells boot script to update the validation tags from this file -->
	<device name="loki" version="2.2">

		<!-- Features list variable hardware components for this device -->
		<features>
			<string-array name=".features">
				<!-- RF banding -->
				<item>radio</item>
				<!-- RAM size -->
				<item>ram</item>
				<!-- Storage size -->
				<item>storage</item>
				<!-- Dual SIM function -->
				<item>dualsim</item>
				<!-- Front color -->
				<item>frontcolor</item>
			</string-array>
		</features>

		<!-- Attributes list allowed values for features -->
		<attributes>
			<string-array name=".attributes">
				<!-- range is a comma-separated list of allowed string values -->
				<item>.range</item>
				<!-- cmdline items must be exported to kernel cmdline, with prefix given in the value -->
				<item>.cmdline</item>
				<!-- chosen items must be exported to kernel devtree, with prefix given in the value -->
				<item>.chosen</item>
				<!-- system items must be exported as system property, with prefix given in the value -->
				<item>.system</item>
				<!-- same format as before, plus new attribute ".auto" -->
				<!-- auto indicates BL should auto-fill respective tag if it is empty -->
				<!-- this can work either using "hwid", "hwprobe" or "uspace" method -->
				<item>.auto</item>
			</string-array>
		</attributes>

		<!-- Constraints describe interpretation of attributes, and may contain data to feed to BL -->
		<constraints>
			<!-- look up value by matching "hwid" table, combination with current device,
				then parsing out field indicated by "index",
				and then translating the field as prescribed by "map" -->
			<string name="radio/.auto">key=hwid;index=2;map=1:NA,2:ROW,3:NA_UMTS,4:SPRINT,5:EMEA,6:CHINA</string>
			<string name="radio/.cmdline">androidboot.</string>
			<string name="radio/.system">ro.vendor.hw.</string>
			<string-array name="radio/.range">
				<item>NA</item>
				<item>ROW</item>
				<item>NA_UMTS</item>
				<item>SPRINT</item>
				<item>EMEA</item>
				<item>CHINA</item>
			</string-array>

			<!-- use result of ram HW detection to fill the field -->
			<string name="ram/.auto">key=hwprobe;index=__ram</string>
			<string name="ram/.system">ro.vendor.hw.</string>
			<string-array name="ram/.range">
				<item>4GB</item>
				<item>6GB</item>
			</string-array>

			<!-- use result of storage HW detection to fill the field -->
			<string name="storage/.auto">key=hwprobe;index=__storage</string>
			<string name="storage/.system">ro.vendor.hw.</string>
			<string-array name="storage/.range">
				<item>64GB</item>
				<item>128GB</item>
			</string-array>

			<string name="dualsim/.auto">default=true</string>
			<string name="dualsim/.cmdline">androidboot.</string>
			<string name="dualsim/.system">ro.vendor.hw.</string>
			<string-array name="dualsim/.range">
				<item>true</item>
				<item>false</item>
			</string-array>

			<!-- frontcolor has to be programmed explicitly -->
			<string name="frontcolor/.system">ro.vendor.hw.</string>
			<string-array name="frontcolor/.range">
				<item>white</item>
				<item>black</item>
				<item>gold</item>
				<item>other</item>
			</string-array>
		</constraints>

		<mappings>
			<!-- Variants describe mapping of feature combinations to device fingerprints,
				to be set in property indicated by "export" -->
			<variants export="ro.vendor.hw.variant" append="ro.vendor.product.device,ro.vendor.product.name,ro.product.device,ro.product.name">
				<!-- ... same format as before ... -->
			</variants>

			<!-- Products describe mapping of feature combinations to marketing names,
				to be set in property indicated by "export" -->
			<products export="ro.vendor.product.display" default="Moto Z&#x00B2;">
				<product name="moto z 2018">
					<string name="radio">CHINA</string>
				</product>
			</products>

			<!-- SKUs describe mapping of feature combinations to factory SKUs,
				disregard this section for now, its implementation is not urgent -->
			<skus export="ro.vendor.product.sku">
				<!-- ... same format as variants/products ... -->
			</skus>
			<quirks>
				<quirk name="0" export="ro.vendor.sf.lcd_inverted" default="1">
					<string name="/proc/device-tree/chosen/mmi,panel_name">mipi_mot_cmd_smd_QHD_546_g</string>
				</quirk>
			</quirks>
		</mappings>
	</device>

    <device name="messi" version="2.2">
        <!-- Features list variable hardware components for this device -->
        <features>
            <string-array name=".features">
                <!-- RF banding -->
                <item>radio</item>
                <!-- RAM size -->
                <item>ram</item>
                <!-- Storage size -->
                <item>storage</item>
                <!-- Dual SIM function -->
                <item>dualsim</item>
                <!-- Camera imager resolution -->
                <item>imager</item>
                <!-- Fingerprint sensor -->
                <item>fps</item>
                <!-- Near Field Communication function -->
                <item>nfc</item>
                <!-- eCompass -->
                <item>ecompass</item>
                <!-- Digital TV function -->
                <item>dtv</item>
                <!-- Front color -->
                <item>frontcolor</item>
            </string-array>
        </features>

        <!-- Attributes list allowed values for features -->
        <attributes>
            <string-array name=".attributes">
                <!-- range is a comma-separated list of allowed string values -->
                <item>.range</item>
                <!-- cmdline items must be exported to kernel cmdline, with prefix given in the value -->
                <item>.cmdline</item>
                <!-- chosen items must be exported to kernel devtree, with prefix given in the value -->
                <item>.chosen</item>
                <!-- system items must be exported as system property, with prefix given in the value -->
                <item>.system</item>
                <!-- same format as before, plus new attribute ".auto" -->
                <!-- auto indicates BL should auto-fill respective tag if it is empty -->
                <!-- this can work either using "hwid", "hwprobe" or "uspace" method -->
                <item>.auto</item>
            </string-array>
        </attributes>

        <!-- Constraints describe interpretation of attributes, and may contain data to feed to BL -->
        <constraints>
            <!-- look up value by matching "hwid" table, combination with current device,
                 then parsing out field indicated by "index",
                 and then translating the field as prescribed by "map" -->
            <string name="radio/.auto">default=SUPERSET</string>
            <string name="radio/.cmdline">androidboot.</string>
            <string name="radio/.system">ro.vendor.hw.</string>
            <string-array name="radio/.range">
                <item>SUPERSET</item>
            </string-array>

            <!-- use result of ram HW detection to fill the field -->
            <string name="ram/.auto">key=hwprobe;index=__ram</string>
            <string name="ram/.system">ro.vendor.hw.</string>
            <string-array name="ram/.range">
                <item>4GB</item>
                <item>6GB</item>
            </string-array>

            <!-- use result of storage HW detection to fill the field -->
            <string name="storage/.auto">key=hwprobe;index=__storage</string>
            <string name="storage/.system">ro.vendor.hw.</string>
            <string-array name="storage/.range">
                <item>32GB</item>
                <item>64GB</item>
                <item>128GB</item>
            </string-array>

            <string name="dualsim/.auto">default=true</string>
            <string name="dualsim/.cmdline">androidboot.</string>
            <string name="dualsim/.system">ro.vendor.hw.</string>
            <string-array name="dualsim/.range">
                <item>true</item>
                <item>false</item>
            </string-array>

            <string name="imager/.auto">default=12MP</string>
            <string name="imager/.chosen">mmi,</string>
            <string name="imager/.system">ro.vendor.hw.</string>
            <string-array name="imager/.range">
                <item>12MP</item>
            </string-array>

            <string name="fps/.auto">default=true</string>
            <string name="fps/.chosen">mmi,</string>
            <string name="fps/.system">ro.vendor.hw.</string>
            <string-array name="fps/.range">
                <item>true</item>
            </string-array>

            <string name="nfc/.auto">default=true</string>
            <string name="nfc/.chosen">mmi,</string>
            <string name="nfc/.system">ro.vendor.hw.</string>
            <string-array name="nfc/.range">
                <item>true</item>
            </string-array>

            <string name="ecompass/.auto">default=true</string>
            <string name="ecompass/.chosen">mmi,</string>
            <string name="ecompass/.system">ro.vendor.hw.</string>
            <string-array name="ecompass/.range">
                <item>true</item>
            </string-array>

            <string name="dtv/.auto">default=false</string>
            <string name="dtv/.chosen">mmi,</string>
            <string name="dtv/.system">ro.vendor.hw.</string>
            <string-array name="dtv/.range">
                <item>false</item>
            </string-array>

            <!-- frontcolor has to be programmed explicitly -->
            <string name="frontcolor/.auto">uspace=config;name=build_vars;map=BLACK:black,NIMBUS:nimbus,black:black,nimbus:nimbus</string>
            <string name="frontcolor/.system">ro.vendor.hw.</string>
            <string-array name="frontcolor/.range">
                <item>black</item>
                <item>nimbus</item>
                <item>other</item>
            </string-array>
        </constraints>

        <mappings>
            <!-- Variants describe mapping of feature combinations to device fingerprints,
                 to be set in property indicated by "export" -->
            <variants export="ro.vendor.hw.variant" append="ro.vendor.product.device,ro.vendor.product.name,ro.product.device,ro.product.name">
                <!-- ... same format as before ... -->
            </variants>

            <!-- Products describe mapping of feature combinations to marketing names,
                 to be set in property indicated by "export" -->
            <products export="ro.vendor.product.display"  default="moto z&#x00B3;">
            </products>

            <!-- SKUs describe mapping of feature combinations to factory SKUs,
                 to be set in property indicated by "export" -->
            <skus export="ro.vendor.product.hardware.sku.variant">
                <!-- ... same format as variants/products ... -->
                <variant name="n">
                    <string name="dualsim">false</string>
                </variant>
            </skus>
        </mappings>
    </device>
</validation>

